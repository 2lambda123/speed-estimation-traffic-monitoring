image: python:latest

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install pylint-gitlab
  - pip install mypy
  - pip install black

stages:
    - formatting
    - linting

formatting:
    stage: formatting
    script:
      - black . --exclude="((?:logs|datasets|output|frames_detected|model_weights|venv|yolov[0-9]))" --check --verbose --diff --color

linting:
  stage: linting
  image: python:3.10.8
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") --ignore-patterns="((?:logs|datasets|output|frames_detected|model_weights|venv|yolov[0-9]))" | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter --ignore-patterns="((?:logs|datasets|output|frames_detected|model_weights|venv|yolov[0-9]))" $(find -type f -name "*.py" ! -path "**/.venv/**") > report/codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter --ignore-patterns="((?:logs|datasets|output|frames_detected|model_weights|venv|yolov[0-9]))" $(find -type f -name "*.py" ! -path "**/.venv/**") > report/index.html
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always
